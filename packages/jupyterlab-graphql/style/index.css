:root {
  --jpgql-icon-open-in-new: url(./icons/open-in-new.svg);
  --jpgql-icon-graphql: url(./icons/graphql.svg);
}

.jp-GraphQLIcon {
  background-image: var(--jpgql-icon-graphql);
  background-repeat: no-repeat;
}

.jp-GraphQL {
  color: var(--jp-ui-font-color1);
  font-size: var(--jp-ui-font-size1);
  display: flex;
  flex-direction: column;
}

/* url widget */
.jp-Toolbar > .jp-Toolbar-item.jp-GraphQL-URL,
.jp-GraphQL-URL > div {
  flex: 1;
  display: flex;
  align-items: center;
}

.jp-GraphQL-URL label,
.jp-GraphQL-URL button {
  flex-grow: 0;
  color: var(--jp-ui-font-color2);
  font-size: var(--jp-ui-font-size0);
  margin: calc(var(--jp-ui-font-size1) / 2);
  border: 0;
  background-color: transparent;
}

.jp-GraphQL-URL label {
  font-style: italic;
}

.jp-GraphQL-URL button {
  font-weight: bold;
  padding: calc(var(--jp-ui-font-size1) / 2);
}

.jp-GraphQL-URL button:focus,
.jp-GraphQL-URL button:hover {
  background-color: var(--jp-layout-color2);
}

.jp-GraphQL-URL input {
  flex: 1;
  background-color: var(--jp-layout-color2);
  color: var(--jp-ui-font-color2);
  border: var(--jp-border-width) solid var(--jp-border-color2);
  background-position: left calc(var(--jp-ui-font-size1) / 4) center;
  background-repeat: no-repeat;
  background-size: var(--jp-ui-font-size1);
  border-radius: calc(var(--jp-ui-font-size1) / 4);
  padding: calc(var(--jp-ui-font-size1) / 2);
}

.jp-GraphQL-URL button.jp-GraphQL-socket {
  background-image: var(--jpgql-icon-graphql);
  min-height: calc(var(--jp-ui-font-size1) * 1.5);
  min-width: calc(var(--jp-ui-font-size1) * 1.5);
  background-repeat: no-repeat;
  background-size: cover;
  padding: 0;
}

.jp-GraphQL-URL button.jp-GraphQL-socket-connecting,
.jp-GraphQL-URL button.jp-GraphQL-socket-disconnecting,
.jp-GraphQL-URL button.jp-GraphQL-socket-reconnecting {
  opacity: 0.5;
  transition: all 1s ease-in-out;
  transition-delay: 250ms;
}

.jp-GraphQL-URL button.jp-GraphQL-socket-connected,
.jp-GraphQL-URL button.jp-GraphQL-socket-disconnected,
.jp-GraphQL-URL button.jp-GraphQL-socket-reconnected {
  opacity: 1;
  transition: all 1s ease-in-out;
  transition-delay: 250ms;
}
.jp-GraphQL-URL button.jp-GraphQL-socket-error {
  opacity: 1;
  transition: all 1 ease-in-out;
  transition-delay: 250ms;
}

/* schema/editor */
.jp-GraphQL-Schema,
.jp-GraphQL-Editor {
  display: flex;
  flex-direction: column;
}

.jp-GraphQL-Schema .CodeMirror,
.jp-GraphQL-Editor .CodeMirror {
  flex: 1;
  position: relative;
  overflow-y: auto;
}

.jp-GraphQL-Schema .CodeMirror .CodeMirror-gutters,
.jp-GraphQL-Editor .CodeMirror .CodeMirror-gutters {
  background-color: transparent;
}

.jp-GraphQL-Editor .cm-atom:hover,
.jp-GraphQL-Editor .cm-property:hover {
  text-decoration: underline;
}

/* docs */
.jp-GraphQL-Docs {
  display: flex;
  flex-direction: column;
  background-color: var(--jp-layout-color2);
  color: var(--jp-ui-font-color1);
}

.jp-GraphQL-Docs > div {
  flex: 1;
  overflow-y: scroll;
  padding: 0 calc(var(--jp-ui-font-size1) / 2);
}

.jp-GraphQL-Docs summary {
  font-weight: bold;
}
